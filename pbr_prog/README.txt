OTA (over-the-air):
The datasets contain modulated packet traffic generated using narrowband benchmark_tx.py program in the default GNU Radio distribution. Each dataset contains 0.1 Mbyte of modulated information transmitted at 2.4 GHz and sampled at 1M sps, and has been manually trimmed to fit the received transmission. Capture is OTA with no prior knowledge of TX protocol. 

TX: USRP N210 
RX: USRP B210
- Model is irrelevant as long as RX sample rate and overall function are supported 

Modulations: BPSK, QPSK, 8-PSK (requires change in gr-digital/python/digital/psk.py), 16-QAM, GMSK

Packet sizes: 1500, 2000, 4000, rand

Distance TX->RX: 2.5, 2.0, 1.5, 1.0, 0.5 meters
- Need to expand over much larger distances to prove efficacy of methods. 

Naming convention: (modulation)_(packet size, bytes)_(distance, 0.1*meters).npy 

Sets labeled "rand" are generated with a modified benchmark program. Packet size is generated by a pseudorandom sequence using numpy.random.randint. The same random sequence is used across all "rand" sets for reproducability and comparability. [640, 3808, 2288...]. 

Commands:
python benchmark_tx.py -f 2.4G -m BPSK -s 1500 -M 0.1 -r 200000 --args="addr=192.168.10.3" #address may be different
python benchmark_tx2.py -f 2.4G -m BPSK -M 0.1 -r 200000 --args="addr=192.168.10.3"
- run "python benchmark_tx.py -h" first to see all commands
- Change "BPSK" to all other modulations, chance -s to all other packet sizes, only include device address if needed
- Run receiver directly from GRC before TX starts


STF (straight-to-file): 
The datasets in this folder contain modulated packet traffic generated using benchmark_tx.py program as above, but saved to file instead of transmitting over-the-air. This allows for heuristic analysis of packet traffic features and verification of testing. 

"_1500_": 67 packets/set
"_2000_": 50 packets/set
"_4000_": 24 packets/set
"_rand_": 48 packets/set 

For technical report: 
- OTA = over-the-air
- SPB = samples per input bin

FOR CHENGCHENG: 
- In POWDER, it would be ideal to generate new datasets with some overlap. So considering all 5 modulations, all 4 packet sizes, over a longer distance, in other environments. 
- No need to consider STF data. 
- We will be performing the same analysis so the focus now will be on how the PBR algorithms perform in different channel conditions. 
- Try whatever is available for this in POWDER, and let me know if you have questions. 
- I have included benchmark_tx (original) and benchmark_tx2 (random set generation) as well as GRC receiver logic. Let me know if you have questions about these or how to run them to replicate the experiment. 
